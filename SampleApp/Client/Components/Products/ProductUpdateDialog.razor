@using SampleApp.Shared.RequestModels.Products
@using SampleApp.Client.Application.Managers
<MudDialog>
    <DialogContent>
        <EditForm Model="@Model">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@Model.Name" FullWidth="true" Variant="Variant.Outlined" Label="Name *"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudSelect T="string" Label="Product Type *" @bind-Value="@Model.ProductType" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                        <MudSelectItem T="string" Value="@("Cloth")">Cloth</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Food")">Food</MudSelectItem>
                        <MudSelectItem T="string" Value="@("Sport")">Sport</MudSelectItem>
                    </MudSelect>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="@Model.Base64ImageData" FullWidth="true" Variant="Variant.Outlined" Label="Product Image * (Ignored for brevity)"></MudTextField>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick="Submit">Update</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public int ProductId { get; set; }

    [Inject]
    public IProductsManager ProductsManager { get; set; }

    private UpdateProductBasicInfoRequestModel Model { get; set; } = new();

    protected override Task OnInitializedAsync()
    {
        Model = ProductsManager.Data
            .Where(x => x.ProductId == ProductId)
            .Select(x => new UpdateProductBasicInfoRequestModel()
            {
                Name = x.Name,
                ProductType = x.ProductType
            })
            .First();

        return Task.CompletedTask;

    }


    void Submit() => MudDialog.Close(DialogResult.Ok(Model));
    void Cancel() => MudDialog.Cancel();
}